diff -Nurb a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2021-02-08 07:34:54.911674688 +0000
+++ b/CMakeLists.txt	2021-02-08 07:33:20.173671065 +0000
@@ -264,7 +264,7 @@
   ELSEIF(EMBREE_ISA_AVX512)
     SET(ISA  ${AVX512})
   ELSEIF(EMBREE_ISA_AVX2)
-    SET(ISA  ${AVX512})
+    SET(ISA  ${AVX2})
   ELSEIF(EMBREE_ISA_AVX)
     SET(ISA  ${AVX})
   ELSEIF(EMBREE_ISA_SSE4.2)
@@ -272,9 +272,10 @@
   ELSEIF(EMBREE_ISA_SSE2)
     SET(ISA  ${SSE2})
   ELSE()
-    SET(ISA  ${SSE4.2})
+    SET(ISA  ${NONE})
   ENDIF()
 
+
   MESSAGE( "ISA: ${ISA}")
 
 ELSEIF (EMBREE_MAX_ISA STREQUAL "DEFAULT")
@@ -382,6 +383,7 @@
 
 IF (EMBREE_ISA_SSE2)
   ADD_DEFINITIONS(-DEMBREE_TARGET_SSE2)
+  add_compile_definitions(EMBREE_TARGET_SSE2)
   LIST(APPEND ISPC_TARGETS "sse2")
   IF(NOT FLAGS_LOWEST)
     SET(ISA_LOWEST ${SSE2})
@@ -391,6 +393,7 @@
 
 IF (EMBREE_ISA_SSE42)
   ADD_DEFINITIONS(-DEMBREE_TARGET_SSE42)
+  add_compile_definitions(EMBREE_TARGET_sse42)
   LIST(APPEND ISPC_TARGETS "sse4")
   IF(NOT FLAGS_LOWEST)
     SET(ISA_LOWEST ${SSE42})
@@ -400,6 +403,7 @@
 
 IF (EMBREE_ISA_AVX)
   ADD_DEFINITIONS(-DEMBREE_TARGET_AVX)
+  add_compile_definitions(EMBREE_TARGET_AVX)
   LIST(APPEND ISPC_TARGETS "avx")
   IF(NOT FLAGS_LOWEST)
     SET(ISA_LOWEST ${AVX})
@@ -409,6 +413,7 @@
 ENDIF ()
 
 IF (EMBREE_ISA_AVX2)
+  add_compile_definitions(EMBREE_TARGET_AVX2)
   ADD_DEFINITIONS(-DEMBREE_TARGET_AVX2)
   LIST(APPEND ISPC_TARGETS "avx2")
   IF(NOT FLAGS_LOWEST)
@@ -418,8 +423,8 @@
   ENDIF()
 ENDIF ()
 
-IF (EMBREE_ISA_AVX512)
-  ADD_DEFINITIONS(-DEMBREE_TARGET_AVX512)
+IF (EMBREE_ISA_AVX512 OR EMBREE_ISA_AVX512SKX)
+  add_compile_definitions(EMBREE_TARGET_AVX512)
   LIST(APPEND ISPC_TARGETS "avx512skx-i32x16")
   IF(NOT FLAGS_LOWEST)
     SET(ISA_LOWEST ${AVX512})
diff -Nurb a/common/sys/intrinsics.h b/common/sys/intrinsics.h
--- a/common/sys/intrinsics.h	2021-02-08 07:34:54.911674688 +0000
+++ b/common/sys/intrinsics.h	2021-02-08 07:33:20.181670896 +0000
@@ -13,6 +13,8 @@
 
 #	include <immintrin.h>
 
+#else
+#	include "fakesimd.h"
 #endif
 
 #if defined(__BMI__) && defined(__GNUC__) && !defined(__INTEL_COMPILER)
@@ -184,7 +186,7 @@
 ////////////////////////////////////////////////////////////////////////////////
   
 #else
-  
+/*  
 #if defined(__i386__) && defined(__PIC__)
   
   __forceinline void __cpuid(int out[4], int op) 
@@ -216,6 +218,14 @@
   }
   
 #endif
+*/
+//#if defined(__i386__) && defined(__PIC__)
+__forceinline void __cpuid_count(int out[4], int op1, int op2) {}
+//#else
+__forceinline void cpuid_count(int out[4], int op){}
+//{std::fill(out, out + 4, 0);op = 0;}
+//#endif
+__forceinline void __cpuid(int out[4], int op){}
   
   __forceinline uint64_t read_tsc()  {
     uint32_t high,low;
diff -Nurb a/common/sys/sysinfo.cpp b/common/sys/sysinfo.cpp
--- a/common/sys/sysinfo.cpp	2021-02-08 07:34:54.911674688 +0000
+++ b/common/sys/sysinfo.cpp	2021-02-08 07:33:20.185670812 +0000
@@ -239,7 +239,7 @@
     return xcr0;
 #else
     int xcr0 = 0;
-    __asm__ ("xgetbv" : "=a" (xcr0) : "c" (0) : "%edx" );
+//    __asm__ ("xgetbv" : "=a" (xcr0) : "c" (0) : "%edx" );
     return xcr0;
 #endif
   }
diff -Nurb a/common/sys/thread.cpp b/common/sys/thread.cpp
--- a/common/sys/thread.cpp	2021-02-08 07:34:54.911674688 +0000
+++ b/common/sys/thread.cpp	2021-02-08 07:33:20.185670812 +0000
@@ -6,7 +6,8 @@
 #include "string.h"
 
 #include <iostream>
-#include <xmmintrin.h>
+#include "intrinsics.h"
+//#include <xmmintrin.h>
 
 #if defined(PTHREADS_WIN32)
 #pragma comment (lib, "pthreadVC.lib")
diff -Nurb a/include/embree3/rtcore_config.h b/include/embree3/rtcore_config.h
--- a/include/embree3/rtcore_config.h	1970-01-01 01:00:00.000000000 +0100
+++ b/include/embree3/rtcore_config.h	2021-02-08 07:33:20.201670474 +0000
@@ -0,0 +1,56 @@
+// Copyright 2009-2021 Intel Corporation
+// SPDX-License-Identifier: Apache-2.0
+
+#pragma once
+
+#define RTC_VERSION_MAJOR 3
+#define RTC_VERSION_MINOR 12
+#define RTC_VERSION_PATCH 2
+#define RTC_VERSION 31202
+#define RTC_VERSION_STRING "3.12.2"
+
+#define RTC_MAX_INSTANCE_LEVEL_COUNT 1
+
+#define EMBREE_MIN_WIDTH 0
+#define RTC_MIN_WIDTH EMBREE_MIN_WIDTH
+
+/* #undef EMBREE_STATIC_LIB */
+/* #undef EMBREE_API_NAMESPACE */
+
+#if defined(EMBREE_API_NAMESPACE)
+#  define RTC_NAMESPACE 
+#  define RTC_NAMESPACE_BEGIN namespace  {
+#  define RTC_NAMESPACE_END }
+#  define RTC_NAMESPACE_USE using namespace ;
+#  define RTC_API_EXTERN_C
+#  undef EMBREE_API_NAMESPACE
+#else
+#  define RTC_NAMESPACE_BEGIN
+#  define RTC_NAMESPACE_END
+#  define RTC_NAMESPACE_USE
+#  if defined(__cplusplus)
+#    define RTC_API_EXTERN_C extern "C"
+#  else
+#    define RTC_API_EXTERN_C
+#  endif
+#endif
+
+#if defined(ISPC)
+#  define RTC_API_IMPORT extern "C" unmasked
+#  define RTC_API_EXPORT extern "C" unmasked
+#elif defined(EMBREE_STATIC_LIB)
+#  define RTC_API_IMPORT RTC_API_EXTERN_C
+#  define RTC_API_EXPORT RTC_API_EXTERN_C
+#elif defined(_WIN32)
+#  define RTC_API_IMPORT RTC_API_EXTERN_C __declspec(dllimport)
+#  define RTC_API_EXPORT RTC_API_EXTERN_C __declspec(dllexport)
+#else
+#  define RTC_API_IMPORT RTC_API_EXTERN_C
+#  define RTC_API_EXPORT RTC_API_EXTERN_C __attribute__ ((visibility ("default")))
+#endif
+
+#if defined(RTC_EXPORT_API)
+#  define RTC_API RTC_API_EXPORT
+#else
+#  define RTC_API RTC_API_IMPORT
+#endif
diff -Nurb a/kernels/config.h b/kernels/config.h
--- a/kernels/config.h	1970-01-01 01:00:00.000000000 +0100
+++ b/kernels/config.h	2021-02-08 07:33:20.221670053 +0000
@@ -0,0 +1,79 @@
+// Copyright 2009-2021 Intel Corporation
+// SPDX-License-Identifier: Apache-2.0
+
+/* #undef EMBREE_RAY_MASK */
+/* #undef EMBREE_STAT_COUNTERS */
+/* #undef EMBREE_BACKFACE_CULLING */
+/* #undef EMBREE_BACKFACE_CULLING_CURVES */
+#define EMBREE_FILTER_FUNCTION
+/* #undef EMBREE_IGNORE_INVALID_RAYS */
+#define EMBREE_GEOMETRY_TRIANGLE
+#define EMBREE_GEOMETRY_QUAD
+#define EMBREE_GEOMETRY_CURVE
+#define EMBREE_GEOMETRY_SUBDIVISION
+#define EMBREE_GEOMETRY_USER
+#define EMBREE_GEOMETRY_INSTANCE
+#define EMBREE_GEOMETRY_GRID
+#define EMBREE_GEOMETRY_POINT
+#define EMBREE_RAY_PACKETS
+/* #undef EMBREE_COMPACT_POLYS */
+
+#define EMBREE_CURVE_SELF_INTERSECTION_AVOIDANCE_FACTOR 2.0
+
+#if defined(EMBREE_GEOMETRY_TRIANGLE)
+  #define IF_ENABLED_TRIS(x) x
+#else
+  #define IF_ENABLED_TRIS(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_QUAD)
+  #define IF_ENABLED_QUADS(x) x
+#else
+  #define IF_ENABLED_QUADS(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_CURVE) || defined(EMBREE_GEOMETRY_POINT)
+  #define IF_ENABLED_CURVES_OR_POINTS(x) x
+#else
+  #define IF_ENABLED_CURVES_OR_POINTS(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_CURVE)
+  #define IF_ENABLED_CURVES(x) x
+#else
+  #define IF_ENABLED_CURVES(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_POINT)
+  #define IF_ENABLED_POINTS(x) x
+#else
+  #define IF_ENABLED_POINTS(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_SUBDIVISION)
+  #define IF_ENABLED_SUBDIV(x) x
+#else
+  #define IF_ENABLED_SUBDIV(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_USER)
+  #define IF_ENABLED_USER(x) x
+#else
+  #define IF_ENABLED_USER(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_INSTANCE)
+  #define IF_ENABLED_INSTANCE(x) x
+#else
+  #define IF_ENABLED_INSTANCE(x)
+#endif
+
+#if defined(EMBREE_GEOMETRY_GRID)
+  #define IF_ENABLED_GRIDS(x) x
+#else
+  #define IF_ENABLED_GRIDS(x)
+#endif
+
+
+
+
diff -Nurb a/kernels/hash.h b/kernels/hash.h
--- a/kernels/hash.h	1970-01-01 01:00:00.000000000 +0100
+++ b/kernels/hash.h	2021-02-08 07:33:20.221670053 +0000
@@ -0,0 +1,4 @@
+// Copyright 2009-2021 Intel Corporation
+// SPDX-License-Identifier: Apache-2.0
+
+#define RTC_HASH ""
