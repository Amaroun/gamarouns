diff -Nurb a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
--- a/cmake/Dependencies.cmake	2019-05-01 12:58:24.000000000 +0200
+++ b/cmake/Dependencies.cmake	2019-07-06 20:34:53.684075821 +0200
@@ -43,18 +43,14 @@
     find_package(PNG REQUIRED)
     include_directories(BEFORE SYSTEM ${PNG_PNG_INCLUDE_DIR})
 	# Find Python Libraries
-    if("${PYTHON_V}" EQUAL "27")
-        find_package(PythonLibs 2.7)
-    else()
-        find_package(PythonLibs 3.4)
-    endif()
+	find_package (Python COMPONENTS Interpreter Development)
 endif()
 
 find_program(PYSIDE_UIC NAMES pyside-uic pyside2-uic
 		HINTS "${PYTHON_INCLUDE_DIRS}/../Scripts"
 		PATHS "c:/Program Files/Python${PYTHON_V}/Scripts")
 
-include_directories(${PYTHON_INCLUDE_DIRS})
+include_directories(${Python_INCLUDE_DIRS})
 
 # Find Boost
 set(Boost_USE_STATIC_LIBS       OFF)
@@ -66,7 +62,7 @@
 
 # For Windows builds, PYTHON_V must be defined as "3x" (x=Python minor version, e.g. "35")
 # For other platforms, specifying python minor version is not needed
-set(LUXRAYS_BOOST_COMPONENTS thread program_options filesystem serialization iostreams regex system python${PYTHON_V} chrono serialization numpy${PYTHON_V})
+set(LUXRAYS_BOOST_COMPONENTS thread program_options filesystem serialization iostreams regex system python${Python_VERSION_MAJOR}${Python_VERSION_MINOR} chrono serialization)
 find_package(Boost ${Boost_MINIMUM_VERSION} COMPONENTS ${LUXRAYS_BOOST_COMPONENTS})
 if (NOT Boost_FOUND)
         # Try again with the other type of libs
