diff -NurB x/cmake/Dependencies.cmake y/cmake/Dependencies.cmake
--- x/cmake/Dependencies.cmake	2018-05-06 11:04:25.000000000 +0200
+++ y/cmake/Dependencies.cmake	2018-09-02 23:47:43.624677320 +0200
@@ -127,6 +127,15 @@
 	include_directories(BEFORE SYSTEM ${BLOSC_INCLUDE_PATH})
 endif ()
 
+# OpenVDB
+set(OPENVDB_ROOT                   "${OPENVDB_SEARCH_PATH}")
+
+find_package(OpenVDB REQUIRED)
+
+if (OpenVDB_FOUND)
+	include_directories(BEFORE SYSTEM ${OPENVDB_INCLUDE_PATH})
+endif ()
+
 # OpenMP
 if(NOT APPLE)
 	find_package(OpenMP)
diff -NurB x/cmake/FindOpenVDB.cmake y/cmake/FindOpenVDB.cmake
--- x/cmake/FindOpenVDB.cmake	1970-01-01 01:00:00.000000000 +0100
+++ y/cmake/FindOpenVDB.cmake	2018-09-02 23:50:05.815670106 +0200
@@ -0,0 +1,95 @@
+# Copyright (c) 2012-2016 DreamWorks Animation LLC
+#
+# All rights reserved. This software is distributed under the
+# Mozilla Public License 2.0 ( http://www.mozilla.org/MPL/2.0/ )
+#
+# Redistributions of source code must retain the above copyright
+# and license notice and the following restrictions and disclaimer.
+#
+# *     Neither the name of DreamWorks Animation nor the names of
+# its contributors may be used to endorse or promote products derived
+# from this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY INDIRECT, INCIDENTAL,
+# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+# IN NO EVENT SHALL THE COPYRIGHT HOLDERS' AND CONTRIBUTORS' AGGREGATE
+# LIABILITY FOR ALL CLAIMS REGARDLESS OF THEIR BASIS EXCEED US$250.00.
+#
+
+# -*- cmake -*-
+# - Find OpenVDB
+#
+# Author : Fredrik Salomonsson fredriks@d2.com
+#
+# OpenVDB_FOUND                 Set if OpenVDB is found.
+# OpenVDB_INCLUDE_DIR           OpenVDB's include directory
+# OpenVDB_LIBRARY_DIR           OpenVDB's library directory
+# OpenVDB_<C>_LIBRARY           Specific openvdb library (<C> is upper-case)
+# OpenVDB_LIBRARIES             All openvdb libraries
+# OpenVDB_MAJOR_VERSION         Major version number
+# OpenVDB_MINOR_VERSION         Minor version number
+# OpenVDB_PATCH_VERSION         Patch version number
+#
+# This module read hints about search locations from variables::
+#
+# OPENVDB_ROOT                  Preferred installtion prefix
+
+FIND_PACKAGE( PackageHandleStandardArgs )
+
+FIND_PATH( OPENVDB_LOCATION include/openvdb/version.h 
+  "$ENV{OPENVDB_ROOT}"
+  )
+
+FIND_PACKAGE_HANDLE_STANDARD_ARGS( OpenVDB
+  REQUIRED_VARS OPENVDB_LOCATION 
+  )
+
+IF( OpenVDB_FOUND )
+  SET( OpenVDB_INCLUDE_DIR ${OPENVDB_LOCATION}/include
+    CACHE PATH "OpenVDB include directory")
+
+  SET( OpenVDB_LIBRARY_DIR ${OPENVDB_LOCATION}/lib
+    CACHE PATH "OpenVDB library directory" )
+  
+  FIND_LIBRARY( OpenVDB_OPENVDB_LIBRARY openvdb
+    PATHS ${OpenVDB_LIBRARY_DIR}
+    NO_DEFAULT_PATH
+    NO_SYSTEM_ENVIRONMENT_PATH
+    )
+  
+  SET( OpenVDB_LIBRARIES "")
+  LIST( APPEND OpenVDB_LIBRARIES ${OpenVDB_OPENVDB_LIBRARY} )
+  
+  SET( OPENVDB_VERSION_FILE ${OpenVDB_INCLUDE_DIR}/openvdb/version.h )
+
+  FILE( STRINGS "${OPENVDB_VERSION_FILE}" openvdb_major_version_str
+    REGEX "^#define[\t ]+OPENVDB_LIBRARY_MAJOR_VERSION_NUMBER[\t ]+.*")
+  FILE( STRINGS "${OPENVDB_VERSION_FILE}" openvdb_minor_version_str
+    REGEX "^#define[\t ]+OPENVDB_LIBRARY_MINOR_VERSION_NUMBER[\t ]+.*")
+  FILE( STRINGS "${OPENVDB_VERSION_FILE}" openvdb_patch_version_str
+    REGEX "^#define[\t ]+OPENVDB_LIBRARY_PATCH_VERSION_NUMBER[\t ]+.*")
+
+  STRING( REGEX REPLACE "^.*OPENVDB_LIBRARY_MAJOR_VERSION_NUMBER[\t ]+([0-9]*).*$" "\\1"
+    _openvdb_major_version_number "${openvdb_major_version_str}")
+  STRING( REGEX REPLACE "^.*OPENVDB_LIBRARY_MINOR_VERSION_NUMBER[\t ]+([0-9]*).*$" "\\1"
+    _openvdb_minor_version_number "${openvdb_minor_version_str}")
+  STRING( REGEX REPLACE "^.*OPENVDB_LIBRARY_PATCH_VERSION_NUMBER[\t ]+([0-9]*).*$" "\\1"
+    _openvdb_patch_version_number "${openvdb_patch_version_str}")
+
+  SET( OpenVDB_MAJOR_VERSION ${_openvdb_major_version_number}
+    CACHE STRING "OpenVDB major version number" )
+  SET( OpenVDB_MINOR_VERSION ${_openvdb_minor_version_number}
+    CACHE STRING "OpenVDB minor version number" )
+  SET( OpenVDB_PATCH_VERSION ${_openvdb_patch_version_number}
+    CACHE STRING "OpenVDB patch version number" )
+
+ENDIF( OpenVDB_FOUND )
diff -NurB x/CMakeLists.txt y/CMakeLists.txt
--- x/CMakeLists.txt	2018-05-06 11:04:25.000000000 +0200
+++ y/CMakeLists.txt	2018-09-02 23:48:59.483673471 +0200
@@ -127,6 +127,10 @@
 	MESSAGE(FATAL_ERROR "--> Could not locate required C-BLOSC files - Please check ${BLOSC_SEARCH_PATH}")
 endif()
 
+if (NOT OpenVDB_FOUND)
+	MESSAGE(FATAL_ERROR "--> Could not locate required OpenVDB files - Please check ${OPENVDB_SEARCH_PATH}")
+endif()
+
 ################################################################################
 #
 # Build options
@@ -141,7 +145,7 @@
 	set(LUXCORE_LIBRARY luxcore)
 	ADD_DEFINITIONS("-DLUXCORE_DLL")
 else()
-	set(LUXCORE_LIBRARY luxcore slg-core slg-film slg-kernels luxrays openvdb ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
+	set(LUXCORE_LIBRARY luxcore slg-core slg-film slg-kernels luxrays ${OpenVDB_LIBRARIES} ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
 endif()
 
 # Required by OpenVDB to read ABI 3
diff -NurB x/samples/luxcoredemo/CMakeLists.txt y/samples/luxcoredemo/CMakeLists.txt
--- x/samples/luxcoredemo/CMakeLists.txt	2018-05-06 11:04:25.000000000 +0200
+++ y/samples/luxcoredemo/CMakeLists.txt	2018-09-03 06:14:32.581830275 +0200
@@ -29,4 +29,4 @@
 add_executable(luxcoredemo ${LUXCORELIBDEMO_SRCS})
 add_definitions(${VISIBILITY_FLAGS})
 
-TARGET_LINK_LIBRARIES(luxcoredemo ${LUXCORE_LIBRARY} ${Boost_LIBRARIES} ${OPENCL_LIBRARIES})
+TARGET_LINK_LIBRARIES(luxcoredemo ${OpenVDB_LIBRARIES} ${LUXCORE_LIBRARY} ${Boost_LIBRARIES} ${OPENCL_LIBRARIES})
diff -NurB x/samples/luxcorescenedemo/CMakeLists.txt y/samples/luxcorescenedemo/CMakeLists.txt
--- x/samples/luxcorescenedemo/CMakeLists.txt	2018-05-06 11:04:25.000000000 +0200
+++ y/samples/luxcorescenedemo/CMakeLists.txt	2018-09-03 05:44:28.026921822 +0200
@@ -29,4 +29,4 @@
 add_executable(luxcorescenedemo ${LUXCORESCENEDEMO_SRCS})
 add_definitions(${VISIBILITY_FLAGS})
 
-TARGET_LINK_LIBRARIES(luxcorescenedemo ${LUXCORE_LIBRARY} ${Boost_LIBRARIES} ${OPENCL_LIBRARIES})
+TARGET_LINK_LIBRARIES(luxcorescenedemo ${OpenVDB_LIBRARIES} ${LUXCORE_LIBRARY} ${Boost_LIBRARIES} ${OPENCL_LIBRARIES})
diff -NurB x/src/luxcore/CMakeLists.txt y/src/luxcore/CMakeLists.txt
--- x/src/luxcore/CMakeLists.txt	2018-05-06 11:04:25.000000000 +0200
+++ y/src/luxcore/CMakeLists.txt	2018-09-03 00:13:03.534600213 +0200
@@ -150,7 +150,7 @@
 
 if (BUILD_LUXCORE_DLL)
 	add_library(luxcore SHARED ${LUXCORE_LIB_SRCS} ${LUX_PARSER_SRC})
-	target_link_libraries(luxcore PRIVATE slg-core slg-film slg-kernels luxrays openvdb ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
+	target_link_libraries(luxcore PRIVATE slg-core slg-film slg-kernels luxrays ${OpenVDB_LIBRARIES} ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
 else()
 	add_library(luxcore STATIC ${LUXCORE_LIB_SRCS} ${LUX_PARSER_SRC})
 endif()
@@ -172,10 +172,10 @@
 add_library(pyluxcore MODULE ${PYLUXCORE_SRCS} ${LUXCORE_LIB_SRCS} ${LUX_PARSER_SRC})
 add_definitions(${VISIBILITY_FLAGS})
 if(APPLE)
-	target_link_libraries(pyluxcore -Wl,-undefined -Wl,dynamic_lookup slg-core slg-film slg-kernels luxrays openvdb ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
+	target_link_libraries(pyluxcore -Wl,-undefined -Wl,dynamic_lookup slg-core slg-film slg-kernels luxrays ${OpenVDB_LIBRARIES} ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
     SET_TARGET_PROPERTIES(pyluxcore PROPERTIES XCODE_ATTRIBUTE_DEPLOYMENT_POSTPROCESSING NO) # exclude pylux from strip, not possible
 else()
-	target_link_libraries(pyluxcore PRIVATE slg-core slg-film slg-kernels luxrays openvdb ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
+	target_link_libraries(pyluxcore PRIVATE slg-core slg-film slg-kernels luxrays ${OpenVDB_LIBRARIES} ${BLOSC_LIBRARIES} ${EMBREE_LIBRARY} ${TBB_LIBRARY} ${TIFF_LIBRARIES} ${TIFF_LIBRARIES} ${OPENEXR_LIBRARIES} ${PNG_LIBRARIES} ${JPEG_LIBRARIES})
 endif()
 
 set_target_properties(pyluxcore PROPERTIES PREFIX "")
